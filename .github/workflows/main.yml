name: Monthly Notion Summary

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  notion-update:
    runs-on: ubuntu-latest

    env:
      OPENAI_BASE_URL: https://api.deepseek.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          pwd
          ls -la

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "openai>=1.0.0" requests feedparser
          python -m pip show openai requests feedparser

      # --- 预检：确认 Secrets 是否注入（不打印明文，只打印长度）---
      - name: Preflight check (env)
        env:
          OPENAI_API_KEY:   ${{ secrets.DEEPSEEK_API_KEY }}
          NOTION_TOKEN:     ${{ secrets.NOTION_TOKEN }}
          PAGE_ID:          ${{ secrets.NOTION_PAGE_ID }}
          QUERY_KEYWORDS:   ${{ secrets.QUERY_KEYWORDS }}
        run: |
          python - <<'PY'
          import os, re
          def mask(v): 
              return "MISSING" if not v else f"len={len(v)}"
          print("OPENAI_BASE_URL:", os.environ.get("OPENAI_BASE_URL"))
          print("OPENAI_API_KEY :", mask(os.environ.get("OPENAI_API_KEY")))
          print("NOTION_TOKEN   :", mask(os.environ.get("NOTION_TOKEN")))
          print("PAGE_ID        :", os.environ.get("PAGE_ID"))
          pid = os.environ.get("PAGE_ID","")
          print("PAGE_ID looks like UUID?:", bool(re.fullmatch(r"[0-9a-fA-F-]{32,36}", pid)))
          PY

      # --- DeepSeek 烟测：最小调用 ---
      - name: DeepSeek smoke test
        env:
          OPENAI_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        run: |
          python - <<'PY'
          import os
          from openai import OpenAI
          client = OpenAI(api_key=os.environ["OPENAI_API_KEY"], base_url=os.environ["OPENAI_BASE_URL"])
          r = client.chat.completions.create(
            model="deepseek-chat",
            messages=[{"role":"user","content":"ping"}],
            max_tokens=8, temperature=0
          )
          print("DeepSeek OK:", r.choices[0].message.content.strip())
          PY

      # --- Notion 烟测：往页面追加一小段文本 ---
      - name: Notion smoke test
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          PAGE_ID:      ${{ secrets.NOTION_PAGE_ID }}
        run: |
          python - <<'PY'
          import os, json, requests, sys
          url = f"https://api.notion.com/v1/blocks/{os.environ['PAGE_ID']}/children"
          headers = {
            "Authorization": f"Bearer {os.environ['NOTION_TOKEN']}",
            "Notion-Version": "2022-06-28",
            "Content-Type": "application/json"
          }
          payload = {"children":[{"object":"block","type":"paragraph",
                     "paragraph":{"rich_text":[{"type":"text","text":{"content":"(actions smoke test) ✅"}}]}}]}
          r = requests.patch(url, headers=headers, json=payload, timeout=30)
          print("Notion status:", r.status_code)
          if r.status_code != 200:
            print("Body:", r.text)
            sys.exit(1)
          PY

      # --- 真正运行你的脚本，并把日志输出 ---
      - name: Run push_summary.py
        env:
          OPENAI_API_KEY:   ${{ secrets.DEEPSEEK_API_KEY }}
          NOTION_TOKEN:     ${{ secrets.NOTION_TOKEN }}
          PAGE_ID:          ${{ secrets.NOTION_PAGE_ID }}
          QUERY_KEYWORDS:   ${{ secrets.QUERY_KEYWORDS }}
        run: |
          set -o pipefail
          python -u push_summary.py 2>&1 | tee run.log
          echo "---- tail run.log ----"
          tail -n 80 run.log || true
